# -*- sh -*-

# -------------------------------------------------
# CHANGELOG - multi-chan-fit.py
# -------------------------------------------------

# Key is:
# [+] added
# [-] removed
# [~] changed/fixed
# [V] version change
# ====================================================================


# 2017-02-13
# --------------------------------------------------------------------
# ~ cleaned up some code in funcs40.py
# + added edep and lsveto cuts to MC selection


# 2017-02-13
# --------------------------------------------------------------------
# + added lsveto cuts to the data selection
# + added ncluster cuts to data selection - not much difference from
#   the edep cuts
# ~ revamped the sigle/multi hit TCut making in funcs40.py
# + fix for lsveto MC rootfile selection - my code was also selecting
#   lsvetoair rootfiles - this is now fixed - no big impact on anything
# ~ checked merged data files against normal files and output was the same
# + added paths in funcs40.py to use the Vxx-xx-xx_MERGED rootfiles for data


# 2017-02-09
# --------------------------------------------------------------------
# + finally fixed the bug with the single/multi hit selection criteria
#   It was because the primVolumeName cut was messing stuff up.


# 2017-02-06
# --------------------------------------------------------------------
# + add TCut('1') for simulation as default setting,
#   it works! (no more if-else)
# + add TCut('1') for data as default setting,
#   it works! (no more if-else)
# + added simple data cuts for 'all-hits', 'single-hits', and 'multi-hits'
# + added option 'chan' to force a type of data selection


# 2017-02-02
# --------------------------------------------------------------------
# ~ add new rootfile names to backgrounds40
# ~ generated the new build40 MC rootfiles


# 2017-02-01
# --------------------------------------------------------------------
# ~ backgrounds40.txt now uses V00.02.03 data
# ~ move to V00.02.03 processing of the 1546 data
# + revamp of join40.py for new v40 format
# + add force reuse options in funcs40.py
# + reuse rootfiles works now in funcs40.py
# + forgot to add "from copy import deepcopy" in funcs40.py - oops
# + many tweaks to get "reuse" working
# + add scaleBkgs40() in funcs40.py
# + add scaleSigs40() in funcs40.py
# + add info{} to data,bkgs,sigs in funcs40.py# 
# + mcfile is now a top level option
# - remove the [bp] option, I know it should be 1


# 2017-01-31
# --------------------------------------------------------------------
# - remove the [np] option, I know it should be 1
# ~ fixed a bunch of [key] bugs
# + add data[key]['runtime'] to getData32() in funcs32.py
# ~ tweaked 40-single-hit.py for new functions
# + add dataDRU40() in funcs40.py
# + add build() in funcs40.py
# + add buildMC40() in funcs40.py
# + add buildData40() in funcs40.py
# + add getInfo() in funcs40.py
# + new backgrounds40.txt mcfile
# - remove the [dru2] scaling option after the fit [dru2=1],
#   seems the best thing to do is dru scale before the fit


# 2017-01-30
# --------------------------------------------------------------------
# + new column for channel [A]All, [S]Single, or [M]Multi hit data
#   in backgrounds40.txt
# V switching to 40-single-hit.py
# + cut release v3.3 for individual plotting and other tweaks


# 2017-01-25
# --------------------------------------------------------------------
# + have both options for fit chi2/ndf and fit Chi2TestX() but the
#   numbers don't agree... but the Chi2TestX() number looks
#   more reseanable I think?
# + added the number of days to 'data' in the hi-e and lo-e plots
# + added chi2/ndf to the total mc fit results plots
# + print chi2/ndf of the total mc compared to data...
#   it will need some tweaking later one...
# + now save plots to ./plots and make dir if doesn't exist
# + separate/individual plotting now works for all things!
#   The key was to have a separate canvas name for everything
#   and to Clone() the top and bottom pads - I'm super excited
#   about this awesome feature!
# V switching to 33-separate-plots.py
# + cut a new release v3.2 since things are in good shape right now
# + print bkgs and sigs activities in the legend


# 2017-01-24
# --------------------------------------------------------------------
# ~ rebuilt all backgrounds with primParticleName cut
# ~ cleaned up scaleSigs32() and scaleBkgs32() 
# ~ v32 now using scaleSigs32() and scaleBkgs32()
# + add scaleSigs32() and doesn't need data input anymore
# + add scaleBkgs32() and doesn't need data input anymore
# ~ cleaned up scaleBkgs()
# + TCut on primParticleName! This was critial to get generated
#   event count correct.


# 2017-01-23
# --------------------------------------------------------------------
# + add full path to funcs.py files so things work on the cluster
#   mainly for join.py files
# ~ throw a warning in readROOT32() if the histo isn't found
# + added in all Estella's internal bkgs numbers from spreadsheet
# + assume 1800 kg of lsveto
# + 7ppt U238 and 4ppt Th232 to backgrounds file


# 2017-01-18
# --------------------------------------------------------------------
# + command line arg for the input file in join32.py
# + add run num to backgrounds file for data items
# + add more sig fit scalings for the externals in scaleSigs()
# + add more bkg scalings for the externals in scaleBkgs()
# + add more selection criteria for the extra bkgs in buildMC32()
# + add more external bkgs to the global input file


# 2017-01-17
# --------------------------------------------------------------------
# + readROOT32() now reads in the file name from backgrounds.txt
# + global input file now has reuse file name specified
# + funcs32 has getData32() with build variable option


# 2017-01-16
# --------------------------------------------------------------------
# ~ join32.py has tweaked paths for MC and Data
# ~ comparison of run 1546 to run 1544 looks good
# ~ use newGeometry sim and phys run 1546
# + funcs32.py has buildMC32()
# V changed to 32-new-geometry-sim.py


# 2017-01-11
# --------------------------------------------------------------------
# ~ added more activities the backgrounds file
# ~ simplified the bkgs and sigs scalings
# ~ fixed the sigs scalings from the fit
# ~ cleaned up v31 a little bit


# 2017-01-02
# --------------------------------------------------------------------
# + add scaleSigs() to funcs3.py
# + fit scaling to dict, ie sigs['key']['scale']


# 2016-12-28
# --------------------------------------------------------------------
# ~ fixed issue with last bin Total MC error being large
# ~ minor tweaks to the axis ranges
# V changed to 31-fit-activity.py


# 2016-12-27
# --------------------------------------------------------------------
# + cut a gitlab release v3.0 here at this point
# + created a new join3-1544-master.root with the U238 chain breaking
# + found and fixed a big bug with the TPad memory allocation 
# + added readROOT3() to funcs3.py
# + backgrounds3.txt now has a new format for broken chain handling
# ~ tweaked join3.py for new format
# + delete signal keys that aren't being fit ie if there is not 2 or
#   more signals, then the plotting just shows what was actually fit
# + skip fitting if not 2 or more signals for a crystal
# + can now skip all lines in backgrounds file enclosed with """
# + add readFile() function to read in the backgrounds file


# 2016-12-26
# --------------------------------------------------------------------
# ~ did not need to change anything in v30 to get this working
#   except replacing buildMC2() with buildMC3()
# + first attempt at getting broken chain Pb210 in the mix in funcs3.py
# + added new chain breaking variables to backgrounds3.txt 
# ~ using local U238 data for broken chain testing


# 2016-12-20
# --------------------------------------------------------------------
# ~ testing v30 with local data right now...
# + use funcs3.py
# + use backgrounds3.txt
# V switch to v30-broken-chain.py
# V switch to v24-broken-chain.py - nope, this is going to be a big
#   addition with many changes to code everywhere - go v30 for this
# + now only crystals with 2 or more signals get TFractionFitter
# + need at least 2 MC for TFractionFitter to work
# - do not add the bkgs to the total MC from the fit - the data is
#   already bkg subtracted


# 2016-12-17
# --------------------------------------------------------------------
# ~ can now arbitrarily set backgrounds and signals per crystal
# + unique colors now working for the legends too
# + add uniqColor so each location and isotope has the same color


# 2016-12-16
# --------------------------------------------------------------------
# + add uniqSig to get unigue sig names and length for fitter object
# + add uniqAll to get unique names of bkgs and sigs for color scheme
# V switch to 23-separate-sig-bkg.py


# 2016-12-15
# --------------------------------------------------------------------
# ~ played around with the activity scalings - I think I'm close
# ~ updates the backgrounds2.txt file with PMT K40 activities
# + I have a new joined rootfile with Pushpa's calibs and resols
#   called join22-1544-master.root
# ~ ah, and was forgetting to scale by the dru factor - internal K40
#   looks correct again - now back to work on the pmt scalings...
# ~ shoot, i had mbqkg/kg and that should be mbqkg*kg!!!
# + start working on pmt scaling
# ~ i think the internal scaling should be events/detected
#   which becomes bq * runtime * (1./generated)
# ~ tweaked v21 to plot just data for comparison to v22
# ~ tweaked v22 to use new calibs and resols
# + added join22.py to use new calibs and resols
# ~ tweak join2.py to use a specified mcfile in buildMC2()
# ~ tweaked buildMC2() to select either resol() or resol2()
# + added resol2() and Pushpa's resols
# ~ changed root branches in calib22() to use energyD for hi-E


# 2016-12-14
# --------------------------------------------------------------------
# + added calib22() and getData22() for the new calibrations
# + a couple tweaks so you can just plot data! 


# 2016-12-13
# --------------------------------------------------------------------
# V switching to 22-pushpa-calib.py to get calib and reso functions in
# ~ cut a v2.1 release now that internal background activity scaling
#   is working as expected
# ~ looks like scaling is working for internal K40 at least
# + added scaleBkgs() to funcs2.py to scale into real mBq/kg units
# + added key data[key]['runtime'] to dataDRU2()
# ~ use backgrounds2.txt for v21
# ~ don't use bkgs scaling in readROOT2() for v21
# ~ oops, run 1544 has 2 hour subruns - changed in dataDRU2()
# V switch to 21-get-activity-values.py as main/master script
# ~ program now skips the fitting bit if no signals [S] are specified
# ~ program works if there are no backgrounds [B] specified
# ~ add 'reuse' tag to the saved plot names
# ~ dru1 and dru2 with "reuse" now return the exact same results!
# ~ AH! dru1 fitting fails if the fixed K40 scaling is too high
# + new data in join2-1544-master.root


# 2016-12-12
# --------------------------------------------------------------------
# ~ fixed a bug if not using dru1 or dru2 in v20
# + in v14, in func.py I needed to do init mc[loc][iso]['act'] = []
#   and then do mc[loc][iso]["act"].append(-1) for fixed activities


# 2016-12-09
# --------------------------------------------------------------------
# + cut a v2.0 release now that the fit rebinning is fixed
# ~ fixed the rebinscale to work with new v20 format but I still
#   don't understand why it effects the fit results so much
# + applied rebin bug fix to v14 and v20
# ~ FINALLY fixed the fit rebinning issue! I was selecting the wrong
#   subset of bins in the HiE filling section. It needs to look like:
#   hist.SetBinContent(n+np, rsigs[key]['hist'].GetBinContent(fHi[0]+r))


# 2016-12-06
# --------------------------------------------------------------------
# V 20-global-input-file.py is the new standard
# ~ cleaned up the comments a bit in 20-global-input-file.py
# + cut release v1.1 based off of 14-set-bkg-activity.py
# ~ it's working! v14 vs v20 is basically identical! Woo Hoo!!
# ~ hacked a bunch of stuff in 20-global-input-file.py to get this
#   working - I'm sure there's some bugs yet to fix
# ~ fixed dataDRU2()
# ~ the set bkgs activities are now plotted seperatly
# ~ changed a bunch of stuff in 20-global-input-file.py to allow for
#   the new text list based format


# 2016-12-05
# --------------------------------------------------------------------
# ~ applied same fix "range(fLoBins,fbins)" to 20-global-input-file.py
# ~ fixed a bug in 14-set-bkg-activity.py...
#   line 307 should be "range(fLoBins,fbins)" and not
#   "range(fLoBins)" - didn't make much difference in the fitting
#   results? I don't understand that, but a bug none the less.
# + added new dataDRU2() function
# + use funcs2.py with buildMC2(), getData2(), and readROOT2()


# 2016-11-29
# --------------------------------------------------------------------
# + scale non dur1/dru2 rebinned errors by the rebinning/sqrt(2)
#   I'm not sure if this is physics right, but it looks about right
#   in the plots. I'll need to check this again...
# + many additions to set the internal K40 activity, it
#   seems to be working? I'm sure I'll find some bugs...
# + set internal k40 as a fixed activity background
# ~ tweaked funcs.py to have mc[loc][iso]['act'] = -1 by default
#   in readROOT()
# V switch to 14-set-bkg-activity.py


# 2016-11-29
# --------------------------------------------------------------------
# + cut release v1.0 based off of 13-data-dru.py
# - remove the y axis scaling for easier comparison amoung variations


# 2016-11-28
# --------------------------------------------------------------------
# + added y-axis title to resid plots
# - removed legend from resid plots
# ~ changed joined-master.root path to be relative
# + added dru1 histos now have the total mc errors being scaled to dru
# ~ fixed 'fitdata' and 'fitmc' histo filling needs to start at bin 1
#   because bin 0 is the underflow bin - this was a small effect
#   but now it is correct


# 2016-11-23
# --------------------------------------------------------------------
# ~ changed variable 'rebin' to 'hiEfitRebin'
# ~ changed variable 'hiErebin' to 'hiEplotRebin'
# + write the fit results to a text file
# - removed/cleaned up a bunch of outdated code and comments


# 2016-11-22
# --------------------------------------------------------------------
# ~ scale the total-mc histo error by dru scaling
# + add dru2 which scales the data and mc after the fit
# ~ dru1 scales the data before the fit
# + have to also scale by 1/rebinning factor


# Older Comments - I didn't have dates for these
# --------------------------------------------------------------------
# ~ have to use deepcopy when doing mc[E]=deepcopy(mcHi)
# + have to create a seperate mc[E] dict when rebinning
# + add rebinning to the hi-E plots
# + add dru2 which scales the data and mc after the fit
# ~ dru1 scales the data before the fit
# + all data and mc needs seperate dict to preserve memory space
# + the canvas pads need different names to preserve memory space
# ~ fixed some major plotting bugs, nothing physics related,
#   just root plotting maddness
# + dru conversion is working i think...
# + rebinning of the hi-E is working i think...
# ~ I'm probably missing another factor here but it acutally seems
#   that by NOT scaling the rebinned data/mc by 1/rebin, the fit
#   does a better job - I don't understand this yet...
# + scale the data and mc by 1/rebin factor or the lo-E to hi-E scale
#   will bias the higher stats from the rebinned histos
# + I kinda fixed the rebinning bug. still needs more testing...
#   The fit still freaks out sometimes with some rebin factors
#   Not sure why but I need to investigate that more...
# + fixed another big bug with the combined fit histo gap
# + fixed a major bug with the filling of the fit-histos
# ~ let's make the residual show data/MC not data-MC
# + add more lists for total,resid,legs,zeros so they have their
#   own memory space and aren't lost when modifying the canvases
# ~ resolution function should be divided by 2 (see funcs.py)
#   I generated a new joined rootfile with the MC reso / 2
# + added TFractionFitter weight histo but it doesn't work?
#   Still need to work on that. Don't understand why that doesn't work.
# + plot both loE and hiE histos that are scaled from the multi-fit
# + combine loE and hiE histos into 1 histo for fitting
# + need copy.copy or copy.deepcopy when reading histos from rootfile
#   and adding to a list or dict. Going to use deepcopy just to be sure.
# ~ now use buildMC() to get your MC
# ~ all histograms should have a unique key
# ~ fixed hostname selection
# + NOTE: The funcs.py import will only work for 10-mc-fit.py and later!!!
# + I guess importing other personal python modules now works
#   with the cup cluster? It didn't work in the past. Weird.
#   Well okay, now I have a seperate funcs.py to import and it seems
#   to be working with the cup cluster as well.
# ~ big re-write - set mc as mc[loc][iso] - just seems more logical
#   just to be clear - it was mc[iso][loc] - now it's mc[loc][iso]
# ~ fixed a bug with enumerate [iso][loc] j+k thing that doesn't work!!
#   that also effected the mc scaling and plotting...
# + get p-value from fit - doesn't seem right?
# ~ tweaked the plotting cosmetics a bit to make it look better,
#   good grief, what a bitch...
# + put residuals on the same canvas! awesome!
# ~ add options to scale and/or weight the MC
# ~ change plot names if generated on CUP or not
# ~ low energy fit needs to be >= 5keV? not 0keV!
# ~ that was a lot of if-else statements... good grief...
# + option for CUP testing - just 1 root file for testing
# + option for hi/lo energy fitting
# ~ tweak for low energy fit
# ~ fixed mc+data+tot+resid length issue
# + another canvas showing the residuals
# + show the total mc in gray after the fit
# + get hostname and select data path based off hostname
# + try to fit high energy stuff - based off my dm17 fitting code
# ~ tweak legend size to make a little more consistent,
#   but it's still not quite right, i don't know why..
# ~ plot low energy things - ah, use pmtXX.qc5 not qc_5 - oops
# + added low energy calib and resolution functions
# ~ use assumption that res~srqt(E) with intercept=0
# + working on resolution params, but need at least a linear
#   fit to the resolution points to get anything reasonable
# + working on hiE parameters
# + finally got colors to work. What a pain in the ass.
#   The color index can't be too big > 10,000 and you have to
#   save the list of colors and indexes or they get dumped
#   out of memory and then it doesn't work right.
# + urgh... finally got hists into dictionary
#   hist name must be same as hist var-name (don't know why)
# + start adding in external backgrounds too
# ~ use Pushpa's data calibrations - wrong but a start
# ~ just use this as the default so I don't have multiple
#   versions of scripts around
# ~ for some weird reason importing my "funcs.py" doesn't work
#   on the cup cluster? Very weird. So I've put all the extra
#   functions in this script and now it works on CUP. ???
# ~ moved sim stuff to under CUP
# ~ tweaked spacings and labels on the canvas
# + got legends working for the plots
# ~ tweaked the layout to be 4x2 as real layout
# + seperate funcs.py import for extra functions
# + adding in U238 with K40
# + functionized some things in prep for the future fitting
# + ROOT batch settings [0 or 1]
# + canvas as a python list
# + histos as a python list
# + hacking at multi-plot-test.py
# + hacking at plot-test.py

